import { ElementRef, OnDestroy } from '@angular/core';
import { DragDrop } from '@angular/cdk/drag-drop';
import { GanttDomService } from '../../gantt-dom.service';
import { GanttDragContainer } from '../../gantt-drag-container';
import { GanttItemInternal } from '../../class/item';
import { GanttUpper } from '../../gantt-upper';
import { NgxGanttRootComponent } from '../../root.component';
import * as i0 from "@angular/core";
export declare class GanttBarDrag implements OnDestroy {
    private dragDrop;
    private dom;
    private dragContainer;
    private root;
    private ganttUpper;
    private barElement;
    private item;
    private get dragDisabled();
    private get linkDragDisabled();
    private linkDraggingLine;
    private barDragRef;
    private dragRefs;
    private destroy$;
    constructor(dragDrop: DragDrop, dom: GanttDomService, dragContainer: GanttDragContainer, root: NgxGanttRootComponent);
    private createMouseEvents;
    private createBarDrag;
    private createBarHandleDrags;
    private createLinkHandleDrags;
    private openDragBackdrop;
    private closeDragBackdrop;
    private setDraggingStyles;
    private clearDraggingStyles;
    private calcLinkLinePositions;
    private createLinkDraggingLine;
    private destroyLinkDraggingLine;
    createDrags(elementRef: ElementRef, item: GanttItemInternal, ganttUpper: GanttUpper): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<GanttBarDrag, [null, null, null, { skipSelf: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<GanttBarDrag>;
}
