import { GanttViewMonth } from './month';
import { GanttViewType } from '../class/view-type';
import { GanttViewQuarter } from './quarter';
import { GanttViewDay } from './day';
import { GanttViewWeek } from './week';
import { GanttViewYear } from './year';
export function createViewFactory(type, start, end, options) {
    switch (type) {
        case GanttViewType.month:
            return new GanttViewMonth(start, end, options);
        case GanttViewType.week:
            return new GanttViewWeek(start, end, options);
        case GanttViewType.quarter:
            return new GanttViewQuarter(start, end, options);
        case GanttViewType.day:
            return new GanttViewDay(start, end, options);
        case GanttViewType.year:
            return new GanttViewYear(start, end, options);
        default:
            throw new Error('gantt view type invalid');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2dhbnR0L3NyYy92aWV3cy9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFekMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDdkMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUV2QyxNQUFNLFVBQVUsaUJBQWlCLENBQUMsSUFBbUIsRUFBRSxLQUFvQixFQUFFLEdBQWtCLEVBQUUsT0FBMEI7SUFDdkgsUUFBUSxJQUFJLEVBQUU7UUFDVixLQUFLLGFBQWEsQ0FBQyxLQUFLO1lBQ3BCLE9BQU8sSUFBSSxjQUFjLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNuRCxLQUFLLGFBQWEsQ0FBQyxJQUFJO1lBQ25CLE9BQU8sSUFBSSxhQUFhLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNsRCxLQUFLLGFBQWEsQ0FBQyxPQUFPO1lBQ3RCLE9BQU8sSUFBSSxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3JELEtBQUssYUFBYSxDQUFDLEdBQUc7WUFDbEIsT0FBTyxJQUFJLFlBQVksQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2pELEtBQUssYUFBYSxDQUFDLElBQUk7WUFDbkIsT0FBTyxJQUFJLGFBQWEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2xEO1lBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0tBQ2xEO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhbnR0Vmlld09wdGlvbnMsIEdhbnR0Vmlld0RhdGUgfSBmcm9tICcuL3ZpZXcnO1xuaW1wb3J0IHsgR2FudHRWaWV3TW9udGggfSBmcm9tICcuL21vbnRoJztcbmltcG9ydCB7IEdhbnR0RGF0ZSB9IGZyb20gJy4uL3V0aWxzL2RhdGUnO1xuaW1wb3J0IHsgR2FudHRWaWV3VHlwZSB9IGZyb20gJy4uL2NsYXNzL3ZpZXctdHlwZSc7XG5pbXBvcnQgeyBHYW50dFZpZXdRdWFydGVyIH0gZnJvbSAnLi9xdWFydGVyJztcbmltcG9ydCB7IEdhbnR0Vmlld0RheSB9IGZyb20gJy4vZGF5JztcbmltcG9ydCB7IEdhbnR0Vmlld1dlZWsgfSBmcm9tICcuL3dlZWsnO1xuaW1wb3J0IHsgR2FudHRWaWV3WWVhciB9IGZyb20gJy4veWVhcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVWaWV3RmFjdG9yeSh0eXBlOiBHYW50dFZpZXdUeXBlLCBzdGFydDogR2FudHRWaWV3RGF0ZSwgZW5kOiBHYW50dFZpZXdEYXRlLCBvcHRpb25zPzogR2FudHRWaWV3T3B0aW9ucykge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIEdhbnR0Vmlld1R5cGUubW9udGg6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdhbnR0Vmlld01vbnRoKHN0YXJ0LCBlbmQsIG9wdGlvbnMpO1xuICAgICAgICBjYXNlIEdhbnR0Vmlld1R5cGUud2VlazpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR2FudHRWaWV3V2VlayhzdGFydCwgZW5kLCBvcHRpb25zKTtcbiAgICAgICAgY2FzZSBHYW50dFZpZXdUeXBlLnF1YXJ0ZXI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdhbnR0Vmlld1F1YXJ0ZXIoc3RhcnQsIGVuZCwgb3B0aW9ucyk7XG4gICAgICAgIGNhc2UgR2FudHRWaWV3VHlwZS5kYXk6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdhbnR0Vmlld0RheShzdGFydCwgZW5kLCBvcHRpb25zKTtcbiAgICAgICAgY2FzZSBHYW50dFZpZXdUeXBlLnllYXI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdhbnR0Vmlld1llYXIoc3RhcnQsIGVuZCwgb3B0aW9ucyk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2dhbnR0IHZpZXcgdHlwZSBpbnZhbGlkJyk7XG4gICAgfVxufVxuIl19