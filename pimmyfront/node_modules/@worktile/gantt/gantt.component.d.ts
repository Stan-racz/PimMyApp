import { OnInit, ElementRef, EventEmitter, ChangeDetectorRef, NgZone, QueryList, AfterViewInit, TemplateRef } from '@angular/core';
import { Observable } from 'rxjs';
import { GanttUpper } from './gantt-upper';
import { GanttLinkDragEvent, GanttLineClickEvent, GanttItemInternal, GanttItem, GanttSelectedEvent } from './class';
import { NgxGanttTableColumnComponent } from './table/gantt-column.component';
import { NgxGanttTableComponent } from './table/gantt-table.component';
import { GanttGlobalConfig } from './gantt.config';
import { NgxGanttRootComponent } from './root.component';
import { GanttDate } from './utils/date';
import * as i0 from "@angular/core";
export declare class NgxGanttComponent extends GanttUpper implements OnInit, AfterViewInit {
    maxLevel: number;
    async: boolean;
    childrenResolve: (GanttItem: any) => Observable<GanttItem[]>;
    linkable: boolean;
    linkDragStarted: EventEmitter<GanttLinkDragEvent<unknown>>;
    linkDragEnded: EventEmitter<GanttLinkDragEvent<unknown>>;
    lineClick: EventEmitter<GanttLineClickEvent<unknown>>;
    selectedChange: EventEmitter<GanttSelectedEvent<unknown>>;
    table: NgxGanttTableComponent;
    columns: QueryList<NgxGanttTableColumnComponent>;
    tableEmptyTemplate: TemplateRef<any>;
    ganttRoot: NgxGanttRootComponent;
    private ngUnsubscribe$;
    sideTableWidth: number;
    constructor(elementRef: ElementRef<HTMLElement>, cdr: ChangeDetectorRef, ngZone: NgZone, config: GanttGlobalConfig);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    expandChildren(item: GanttItemInternal): void;
    selectItem(selectEvent: GanttSelectedEvent): void;
    scrollToToday(): void;
    scrollToDate(date: number | GanttDate): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxGanttComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxGanttComponent, "ngx-gantt", never, { "maxLevel": "maxLevel"; "async": "async"; "childrenResolve": "childrenResolve"; "linkable": "linkable"; }, { "linkDragStarted": "linkDragStarted"; "linkDragEnded": "linkDragEnded"; "lineClick": "lineClick"; "selectedChange": "selectedChange"; }, ["table", "tableEmptyTemplate", "columns"], never>;
}
