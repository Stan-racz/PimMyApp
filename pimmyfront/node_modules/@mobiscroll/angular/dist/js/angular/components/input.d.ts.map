{"version":3,"file":"input.d.ts","sources":["input.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { InputBase } from '../../core/components/input/input';\nexport declare class MbscInput extends InputBase {\n    vInput: ElementRef;\n    ariaHaspopup: string;\n    ariaExpanded: boolean;\n    accept: string;\n    autocapitalize: string;\n    autocomplete: 'on' | 'off';\n    autocorrect: string;\n    autofocus: string;\n    disabled: boolean;\n    dropdown: boolean;\n    endIcon: string;\n    endIconSrc: string;\n    endIconSvg: string;\n    error: boolean;\n    errorMessage: string;\n    hideIcon: string;\n    hideIconSvg: string;\n    id: string;\n    inputClass: string;\n    inputStyle: 'underline' | 'box' | 'outline';\n    label: string;\n    labelStyle: 'stacked' | 'inline' | 'floating';\n    max: number;\n    maxlength: number;\n    min: number;\n    minlength: number;\n    multiple: string;\n    name: string;\n    passwordToggle: boolean;\n    pattern: string;\n    pickerMap: any;\n    pickerValue: any;\n    placeholder: string;\n    readonly: boolean;\n    required: string;\n    ripple: boolean;\n    rows: number;\n    showIcon: string;\n    showIconSvg: string;\n    spellcheck: string;\n    startIcon: string;\n    startIconSrc: string;\n    startIconSvg: string;\n    step: number;\n    tags: boolean;\n    type: string;\n    onChange: EventEmitter<any>;\n    _id: string;\n    _triggerEvent(ev: any): void;\n    protected _onValueChange(): void;\n    protected _mounted(): void;\n}\n"]}