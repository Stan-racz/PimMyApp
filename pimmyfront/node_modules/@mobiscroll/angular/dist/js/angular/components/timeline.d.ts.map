{"version":3,"file":"timeline.d.ts","sources":["timeline.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, TemplateRef } from '@angular/core';\nimport { MbscCalendarEvent, MbscCalendarEventData, MbscNewEventData, MbscResource, MbscSlot } from '../../core/components/eventcalendar/eventcalendar';\nimport { TimelineBase } from '../../core/components/eventcalendar/timeline/timeline';\nimport { DateType, ITimezonePlugin } from '../../core/util/datetime';\nexport declare class MbscTimeline extends TimelineBase {\n    vScrollCont: ElementRef;\n    vGridCont: ElementRef;\n    vHeaderCont: ElementRef;\n    vResCont: ElementRef;\n    vStickyHeader: ElementRef;\n    vStickyDate: ElementRef;\n    vStickyMonth: ElementRef;\n    vStickyWeek: ElementRef;\n    allDayText: string;\n    amText: string;\n    clickToCreate: boolean | 'single' | 'double';\n    colorsMap: {\n        [key: number]: MbscCalendarEvent[];\n    };\n    dateFormat: string;\n    dateFormatLong: string;\n    dataTimezone: string;\n    dayNames: string[];\n    dayNamesMin: string[];\n    dayNamesShort: string[];\n    displayTimezone: string;\n    dragTimeStep: number;\n    dragToCreate: boolean;\n    dragToMove: boolean;\n    dragToResize: boolean;\n    endDay: number;\n    endTime: string;\n    eventDragEnd: (args: any) => void;\n    eventMap: {\n        [key: number]: MbscCalendarEvent[];\n    };\n    eventContentTemplate: TemplateRef<any>;\n    eventOrder: (event1: MbscCalendarEvent, event2: MbscCalendarEvent) => number;\n    eventTemplate: TemplateRef<any>;\n    exclusiveEndDates: boolean;\n    extendDefaultEvent: (args: MbscNewEventData) => MbscCalendarEvent;\n    externalDrop: boolean;\n    eventList: boolean;\n    firstDay: number;\n    fromText: string;\n    getDay: (d: Date) => number;\n    getDate: (y: number, m: number, d: number, h?: number, i?: number, s?: number, u?: number) => number;\n    getMonth: (d: Date) => number;\n    getWeekNumber: (d: Date) => number;\n    getYear: (d: Date) => number;\n    groupBy: 'date' | 'resource';\n    height: number;\n    invalidateEvent: 'start-end' | 'strict';\n    invalidsMap: {\n        [key: number]: MbscCalendarEvent[];\n    };\n    maxDate: number;\n    minDate: number;\n    monthNames: string[];\n    monthNamesShort: string[];\n    newEventText: string;\n    nextIcon: string;\n    nextIconRtl: string;\n    downIcon: string;\n    pmText: string;\n    refDate: DateType;\n    resources: MbscResource[] | null | undefined;\n    resourceHeaderTemplate: TemplateRef<any>;\n    resourceTemplate: TemplateRef<any>;\n    rowHeight: 'variable' | 'equal';\n    scroll: number;\n    selected: number;\n    selectedEventsMap: {\n        [key: number]: MbscCalendarEvent;\n    };\n    showAllDay: boolean;\n    showDays: boolean;\n    showEventTooltip: boolean;\n    size: number;\n    slots: MbscSlot[] | null | undefined;\n    slotTemplate: TemplateRef<any>;\n    startDay: number;\n    startTime: string;\n    timeCellStep: number;\n    timeFormat: string;\n    timeLabelStep: number;\n    timezonePlugin: ITimezonePlugin;\n    toText: string;\n    type: 'week' | 'day' | 'month' | 'year';\n    weekNumbers: boolean;\n    weekText: string;\n    width: number;\n    onCellClick: (args: any) => void;\n    onCellDoubleClick: (args: any) => void;\n    onCellRightClick: (args: any) => void;\n    onEventClick: (args: any) => void;\n    onEventDoubleClick: (args: any) => void;\n    onEventRightClick: (args: any) => void;\n    onEventHoverIn: (args: any) => void;\n    onEventHoverOut: (args: any) => void;\n    onEventDelete: (args: any) => void;\n    onEventDragEnd: (args: any) => void;\n    onEventDragStart: (args: any) => void;\n    onWeekDayClick: (args: any) => void;\n    _defId: string;\n    _oneDay: number;\n    _checkDisplay(event: MbscCalendarEventData): boolean;\n    _getDayKey(index: number, day: any): number;\n    _getEventArgs(dayEvents: any, slot: any, v: number, event: any, resource: string | number): {\n        date: Date;\n        domEvent: any;\n        resource: string | number;\n        slot: any;\n        source: string;\n    };\n    _getEventKey(index: number, data: any): any;\n    _getDragKey(resourceId: number | string, slotId: string | number, dateKey: string): string;\n    _getId(index: number, data: any): any;\n    protected _mounted(): void;\n}\n"]}