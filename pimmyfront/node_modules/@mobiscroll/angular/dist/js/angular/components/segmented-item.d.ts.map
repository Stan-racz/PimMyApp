{"version":3,"file":"segmented-item.d.ts","sources":["segmented-item.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { SegmentedBase } from '../../core/components/segmented/segmented-item';\nimport { MbscRadioService } from '../shared/radio-service';\nexport declare class MbscSegmented extends SegmentedBase {\n    _radioService: MbscRadioService;\n    vInput: ElementRef;\n    vBox: ElementRef;\n    ariaLabel: string;\n    color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light';\n    checked: any;\n    disabled: boolean;\n    endIcon: string;\n    endIconSrc: string;\n    endIconSvg: string;\n    icon: string;\n    iconSvg: string;\n    iconSrc: string;\n    name: string;\n    ripple: boolean;\n    startIcon: string;\n    startIconSrc: string;\n    startIconSvg: string;\n    select: 'single' | 'multiple';\n    checkedChange: EventEmitter<any>;\n    private _check;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(disabled: boolean): void;\n    writeValue(val: any): void;\n    protected _ctor(): void;\n    protected _change(checked: boolean): void;\n    protected _render(s: any, state: any): void;\n    protected _mounted(): void;\n}\n"]}