{"version":3,"file":"select.d.ts","sources":["select.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, QueryList, TemplateRef } from '@angular/core';\nimport { MbscPopupButton, MbscPopupDisplay } from '../../core/components/popup/popup';\nimport { MbscScrollerWheel } from '../../core/components/scroller/scroller';\nimport { MbscSelectOnFilterEvent, SelectBase } from '../../core/components/select/select';\nimport { MbscInput } from './input';\nimport { MbscScroller } from './scroller';\nexport declare class MbscSelectOptionDirective {\n}\nexport declare class MbscSelectOptionComponent implements AfterViewInit {\n    private host;\n    value: any;\n    group: string;\n    disabled: boolean;\n    text: string;\n    constructor(host: ElementRef);\n    ngAfterViewInit(): void;\n}\nexport declare class MbscSelectBase extends SelectBase {\n    vInput: MbscInput;\n    clearIcon: string;\n    data: any[];\n    defaultSelection: any;\n    filter: boolean;\n    showGroupWheel: boolean;\n    circular: boolean | boolean[];\n    displayStyle: MbscPopupDisplay;\n    formatValue: (values: any[]) => string;\n    getValue: (values: any[]) => any;\n    maxWheelWidth: number | number[];\n    minWheelWidth: number | number[];\n    selectMultiple: boolean;\n    itemHeight: number;\n    itemTemplate: TemplateRef<any>;\n    parseValue: (valueStr: string) => any[];\n    rows: number;\n    rtl: boolean;\n    showOnClick: boolean;\n    showOnFocus: boolean;\n    valueEquality: (v1: any, v2: any) => boolean;\n    wheels: MbscScrollerWheel[][];\n    wheelWidth: number | number[];\n    disabled: boolean;\n    dropdown: boolean;\n    endIcon: string;\n    endIconSrc: string;\n    endIconSvg: string;\n    error: boolean;\n    errorMessage: string;\n    inputStyle: 'underline' | 'outline' | 'box';\n    label: string;\n    labelStyle: 'floating' | 'stacked' | 'inline';\n    name: string;\n    placeholder: string;\n    startIcon: string;\n    startIconSrc: string;\n    startIconSvg: string;\n    tagInput: boolean;\n    anchor: any;\n    animation: 'pop' | 'slide-up' | 'slide-down' | boolean;\n    buttons: Array<MbscPopupButton | string>;\n    cancelText: string;\n    clearText: string;\n    closeOnEsc: boolean;\n    closeOnOverlayClick: boolean;\n    closeText: string;\n    context: any;\n    display: MbscPopupDisplay;\n    focusOnClose: boolean;\n    focusTrap: boolean;\n    headerText: string;\n    height: number | string;\n    setText: string;\n    showArrow: boolean;\n    showInput: boolean;\n    showOverlay: boolean;\n    width: number | string;\n    filterEmptyText: string;\n    filterPlaceholderText: string;\n    onCancel: EventEmitter<any>;\n    onChange: EventEmitter<any>;\n    onClose: EventEmitter<any>;\n    onFilter: EventEmitter<MbscSelectOnFilterEvent>;\n    onOpen: EventEmitter<any>;\n    onTempChange: EventEmitter<any>;\n    protected _onValueChange(value: any): void;\n}\nexport declare class MbscSelect extends MbscSelectBase {\n    vScroller: MbscScroller;\n    optionComponents: QueryList<MbscSelectOptionComponent>;\n    updateOptionlist(): void;\n    _mounted(): void;\n    valueSet(event: any): void;\n}\nexport declare class MbscSelectDirective extends MbscSelectBase {\n    optionElements: QueryList<any>;\n    options: any;\n    inputElement: any;\n    private _cfr;\n    private _ref;\n    protected _ctor(): void;\n    protected _init(): void;\n    protected _destroy(): void;\n    protected _render(s: any): void;\n    protected _mounted(): void;\n}\n"]}