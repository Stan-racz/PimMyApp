{"version":3,"file":"options.service.d.ts","sources":["options.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { MbscOptions } from '../core/commons';\nimport { Observable } from '../core/util/observable';\nexport declare const MBSC_OPTIONS: InjectionToken<any>;\n/**\n * A service for providing options for components, as well as means to be updated\n * when these options change.\n */\nexport declare class MbscOptionsService<OptionType extends MbscOptions = MbscOptions> {\n    private _staticOptions;\n    private _parentService;\n    /**\n     * Observable that notifies subscribers on the setting changes\n     */\n    change: Observable<OptionType>;\n    /**\n     * Returns the options the service provides\n     */\n    readonly options: OptionType;\n    private _options;\n    constructor(_staticOptions: any, _parentService: MbscOptionsService<any>);\n    /**\n     * Provides the new options to the consumers of the service.\n     * Notifies any subscribers for the change.\n     * @param newOptions The new options object\n     */\n    setOptions(newOptions: OptionType): void;\n}\n"]}