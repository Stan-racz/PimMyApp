{"version":3,"file":"base.d.ts","sources":["base.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, EventEmitter, Injector, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { IModule } from '../core/base';\nimport { MbscOptionsService } from './options.service';\nexport declare function updateValue(inst: any, val: any): void;\n/** @hidden */\nexport declare class Base<PropsType, StateType> implements AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit {\n    protected _cdr: ChangeDetectorRef;\n    protected _elr: ElementRef;\n    protected _zone: NgZone;\n    protected _sanitizer: DomSanitizer;\n    protected _injector: Injector;\n    protected _vcf: ViewContainerRef;\n    protected _ctrl: NgControl;\n    protected _optp: MbscOptionsService<PropsType>;\n    /** @hidden */\n    state: any;\n    /** @hidden */\n    props: any;\n    class: any;\n    context: any;\n    locale: any;\n    modules: IModule[];\n    options: any;\n    responsive: {\n        [key: string]: PropsType;\n    };\n    rtl: boolean;\n    theme: string;\n    themeVariant: 'light' | 'dark' | 'auto';\n    touchUi: boolean | 'auto';\n    _val: any;\n    value: any;\n    valueChange: EventEmitter<any>;\n    onDestroy: EventEmitter<any>;\n    onInit: EventEmitter<any>;\n    _el: any;\n    _onFormChange: (value: any) => any;\n    _onFormTouch: (ev?: any) => any;\n    protected _opt: PropsType;\n    private _doCheck;\n    private _ctxChange;\n    /** @hidden */\n    constructor(_cdr: ChangeDetectorRef, _elr: ElementRef, _zone: NgZone, _sanitizer: DomSanitizer, _injector: Injector, _vcf: ViewContainerRef, _ctrl: NgControl, _optp: MbscOptionsService<PropsType>, _globals: any);\n    /** @hidden */\n    ngOnChanges(changes: SimpleChanges): void;\n    ngDoCheck(): void;\n    /** @hidden */\n    ngAfterViewChecked(): void;\n    /** @hidden */\n    ngOnInit(): void;\n    /** @hidden */\n    ngAfterViewInit(): void;\n    /** @hidden */\n    ngOnDestroy(): void;\n    /** @hidden */\n    _getKey(index: number): number;\n    protected forceUpdate(): void;\n    protected setState(newState: any): void;\n    protected _emit(name: string, args: any): void;\n    protected _safeHtml(html: string): SafeHtml;\n    protected _ctor(): void;\n    protected _init(): void;\n    protected __init(): void;\n    protected _mounted(): void;\n    protected _updated(): void;\n    protected _destroy(): void;\n    protected __destroy(): void;\n    protected _willUpdate(): void;\n}\n"]}