{"version":3,"file":"calendar-view.d.ts","sources":["calendar-view.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, TemplateRef } from '@angular/core';\nimport { CalendarViewBase } from '../../core/shared/calendar-view/calendar-view';\nimport { MbscCalendarEvent, MbscCalendarLabel, MbscResource, ViewType } from '../../core/shared/calendar-view/calendar-view.types';\nimport { InstanceServiceBase } from '../../core/shared/instance-service';\nimport { DateType, ITimezonePlugin } from '../../core/util/datetime';\nimport { noop } from '../../core/util/misc';\n/** @hidden */\nexport declare class MbscCalendarView extends CalendarViewBase {\n    vBody: ElementRef;\n    vPickerCont: ElementRef;\n    activeDate: number;\n    cssClass: string;\n    clickToCreate: boolean | 'double' | 'single';\n    colors: {};\n    dataTimezone: string;\n    dayTemplate: TemplateRef<any>;\n    dayContentTemplate: TemplateRef<any>;\n    displayTimezone: string;\n    dragToCreate: boolean;\n    dragToResize: boolean;\n    dragToMove: boolean;\n    endDay: number;\n    eventOrder: (event1: MbscCalendarLabel, event2: MbscCalendarLabel) => number;\n    eventRange: 'year' | 'month' | 'week' | 'day';\n    eventRangeSize: number;\n    exclusiveEndDates: boolean;\n    fromText: string;\n    hasContent: boolean;\n    hasPicker: boolean;\n    headerTemplate: TemplateRef<any>;\n    height: number | string;\n    hoverEnd: number;\n    hoverStart: number;\n    invalid: {};\n    instanceService: InstanceServiceBase;\n    isPicker: boolean;\n    labels: {};\n    labelTemplate: TemplateRef<any>;\n    labelContentTemplate: TemplateRef<any>;\n    dragData?: {\n        [key: number]: any[];\n    };\n    max: DateType;\n    marked: {};\n    min: DateType;\n    mouseSwipe: boolean;\n    mousewheel: boolean;\n    noOuterChange: boolean;\n    downIcon: string;\n    nextIconH: string;\n    nextIconV: string;\n    nextPageText: string;\n    prevIconH: string;\n    prevIconV: string;\n    prevPageText: string;\n    upIcon: string;\n    pages: number | 'auto';\n    pageLoad: number;\n    refDate: DateType;\n    resourcesMap?: {\n        [key: number]: MbscResource;\n    };\n    rangeEnd: number;\n    rangeStart: number;\n    responsiveStyle: boolean;\n    selectedDates: any;\n    selectedEventsMap: {\n        [key: number]: MbscCalendarEvent;\n    };\n    selectView?: ViewType;\n    showCalendar: boolean;\n    showControls: boolean;\n    showEventTooltip: boolean;\n    showLabelCount: boolean;\n    showOuterDays: boolean;\n    showSchedule: boolean;\n    showToday: boolean;\n    showWeekNumbers: boolean;\n    size: number;\n    startDay: number;\n    swipe: boolean;\n    labelList: 'all' | boolean | number;\n    timeFormat: string;\n    timezonePlugin: ITimezonePlugin;\n    update: number;\n    valid: {};\n    weeks: number;\n    width: number | string;\n    calendarScroll: 'horizontal' | 'vertical';\n    calendarType: 'year' | 'month' | 'week';\n    getDate: (y: number, m: number, d: number) => Date;\n    getDay: (d: Date) => number;\n    getMaxDayOfMonth: (y: number, m: number) => number;\n    getMonth: (d: Date) => number;\n    getWeekNumber: (d: Date) => number;\n    getYear: (d: Date) => number;\n    amText: string;\n    dateFormat: string;\n    dayNames: string[];\n    dayNamesMin: string[];\n    dayNamesShort: string[];\n    eventText: string;\n    eventsText: string;\n    firstDay: number;\n    monthNames: string[];\n    monthNamesShort: string[];\n    moreEventsPluralText: string;\n    moreEventsText: string;\n    pmText: string;\n    todayText: string;\n    toText: string;\n    weekText: string;\n    yearSuffix: string;\n    onActiveChange: (args: any) => void;\n    onCellHoverIn: (args: any) => void;\n    onCellHoverOut: (args: any) => void;\n    onDayClick: (args: any) => void;\n    onDayDoubleClick: (args: any) => void;\n    onDayRightClick: (args: any) => void;\n    onDayHoverIn: (args: any) => void;\n    onDayHoverOut: (args: any) => void;\n    onGestureStart: (args: any) => void;\n    onLabelClick: (args: any) => void;\n    onLabelDoubleClick: (args: any) => void;\n    onLabelRightClick: (args: any) => void;\n    onLabelHoverIn: (args: any) => void;\n    onLabelHoverOut: (args: any) => void;\n    onLabelDelete: (args: any) => void;\n    onLabelUpdateStart: (args: any) => void;\n    onLabelUpdateMove: (args: any) => void;\n    onLabelUpdateEnd: (args: any) => void;\n    onLabelUpdateModeOn: (args: any) => void;\n    onLabelUpdateModeOff: (args: any) => void;\n    onPageChange: (args: any) => void;\n    onPageLoaded: (args: any) => void;\n    onPageLoading: (args: any) => void;\n    onResize: (args: any) => void;\n    onTodayClick: () => void;\n    _noop: typeof noop;\n    _getFirstDay(): number;\n    _getMonthName(item: number): string;\n    protected _mounted(): void;\n    protected _updated(): void;\n}\n"]}