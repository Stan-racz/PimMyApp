{"version":3,"file":"eventcalendar.d.ts","sources":["eventcalendar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BaseComponent } from '../../base';\nimport { MbscPrintConfig } from '../../print';\nimport { CalendarViewBase } from '../../shared/calendar-view/calendar-view';\nimport { ILabelDragDataSet, IPageChangeEvent, IPageLoadedEvent, IPageLoadingEvent, MbscCalendarEvent, MbscCalendarEventData, MbscResource } from '../../shared/calendar-view/calendar-view.types';\nimport { DateType } from '../../util/datetime';\nimport { IScheduleTimezone, MbscEventcalendarOptions, MbscEventcalendarState, MbscEventList } from './eventcalendar.types';\nexport { formatDatePublic as formatDate, parseDate } from '../../util/datetime';\nexport { getJson } from '../../util/http';\nexport { updateRecurringEvent } from '../../util/recurrence';\nexport * from '../../util/luxon';\nexport * from '../../util/moment';\nexport * from '../../util/recurrence.types';\nexport * from '../../shared/calendar-view/calendar-view.types';\nexport * from './eventcalendar.types';\n/** @hidden */\nexport declare class EventcalendarBase extends BaseComponent<MbscEventcalendarOptions, MbscEventcalendarState> {\n    /** @hidden */\n    static defaults: MbscEventcalendarOptions;\n    protected static _name: string;\n    state: MbscEventcalendarState;\n    eventList: MbscEventList[] | undefined;\n    print: (config?: MbscPrintConfig) => void;\n    /** @hidden */\n    _active: number;\n    /** @hidden */\n    _anchor: HTMLDivElement;\n    /** @hidden */\n    _calendarScroll: 'horizontal' | 'vertical' | undefined;\n    /** @hidden */\n    _calendarSize: number;\n    /** @hidden */\n    _calendarLabelList: 'all' | number | boolean | undefined;\n    /** @hidden */\n    _calendarType: 'year' | 'month' | 'week';\n    /** @hidden */\n    _calendarView: CalendarViewBase;\n    /** @hidden */\n    _colorEventList: boolean;\n    /** @hidden */\n    _colorsMap: {\n        [key: number]: MbscCalendarEvent[];\n    } | undefined;\n    /** @hidden */\n    _cssClass: string;\n    /** @hidden */\n    _eventListType: 'year' | 'month' | 'week' | 'day';\n    /** @hidden */\n    _eventListSize: number;\n    /** @hidden */\n    _eventMap: {\n        [key: string]: MbscCalendarEvent[];\n    };\n    /** @hidden */\n    _invalidsMap: {\n        [key: number]: MbscCalendarEvent[];\n    } | undefined;\n    /** @hidden */\n    _list: HTMLElement | null;\n    /** @hidden */\n    _listDays: {\n        [key: number]: HTMLElement | null;\n    } | null;\n    /** @hidden */\n    _maxDate: number;\n    /** @hidden */\n    _minDate: number;\n    /** @hidden */\n    _pageLoad: number;\n    /** @hidden */\n    _popoverClass: string;\n    /** @hidden */\n    _rangeEndDay: number | undefined;\n    /** @hidden */\n    _rangeStartDay: number | undefined;\n    /** @hidden */\n    _rangeType: 'year' | 'month' | 'week' | 'day';\n    /** @hidden */\n    _refDate: Date;\n    /** @hidden */\n    _resourcesMap: {\n        [key: number]: MbscResource;\n    };\n    /** @hidden */\n    _scheduleType: 'month' | 'week' | 'day';\n    /** @hidden */\n    _scheduleEndDay: number;\n    /** @hidden */\n    _scheduleStartDay: number;\n    /** @hidden */\n    _scheduleEndTime: string | undefined;\n    /** @hidden */\n    _scheduleSize: number;\n    /** @hidden */\n    _scheduleStartTime: string | undefined;\n    /** @hidden */\n    _scheduleTimeCellStep: number;\n    /** @hidden */\n    _scheduleTimeLabelStep: number;\n    /** @hidden */\n    _scheduleTimezones: Array<IScheduleTimezone | string> | undefined;\n    /** @hidden */\n    _timelineSize: number;\n    /** @hidden */\n    _timelineType: 'year' | 'month' | 'week' | 'day';\n    /** @hidden */\n    _timelineEndDay: number;\n    /** @hidden */\n    _timelineStartDay: number;\n    /** @hidden */\n    _timelineEndTime: string | undefined;\n    /** @hidden */\n    _timelineStartTime: string | undefined;\n    /** @hidden */\n    _timelineRowHeight: 'variable' | 'equal' | undefined;\n    /** @hidden */\n    _timelineTimeCellStep: number;\n    /** @hidden */\n    _timelineTimeLabelStep: number;\n    /** @hidden */\n    _timelineListing: boolean | undefined;\n    /** @hidden */\n    _selected: number;\n    /** @hidden */\n    _selectedDateHeader: string;\n    /** @hidden */\n    _selectedDates: {\n        [key: number]: boolean;\n    };\n    /** @hidden */\n    _selectedEventsMap: {\n        [key: number]: MbscCalendarEvent;\n    };\n    /** @hidden */\n    _selectedDateTime: number;\n    /** @hidden */\n    _shouldScrollSchedule: number;\n    /** @hidden */\n    _showCalendar: boolean | undefined;\n    /** @hidden */\n    _showDate: boolean | undefined;\n    /** @hidden */\n    _showEventCount: boolean | undefined;\n    /** @hidden */\n    _showEventLabels: boolean | undefined;\n    /** @hidden */\n    _showEventList: boolean | undefined;\n    /** @hidden */\n    _showEventPopover: boolean | undefined;\n    /** @hidden */\n    _showOuterDays: boolean | undefined;\n    /** @hidden */\n    _showSchedule: boolean | undefined;\n    /** @hidden */\n    _showScheduleAllDay: boolean | undefined;\n    /** @hidden */\n    _showScheduleDays: boolean | undefined;\n    /** @hidden */\n    _showTimeline: boolean | undefined;\n    /** @hidden */\n    _showTimelineWeekNumbers: boolean | undefined;\n    /** @hidden */\n    _showWeekNumbers: boolean | undefined;\n    /** @hidden */\n    _rowTops: number[];\n    /** @hidden */\n    _update: number;\n    /** @hidden */\n    _validsMap: {\n        [key: number]: MbscCalendarEvent[];\n    } | undefined;\n    _firstDay: Date;\n    _firstWeekDay: number;\n    _lastDay: Date;\n    /** @hidden */\n    _onScroll: (...args: any[]) => void;\n    protected _eventListHTML: any;\n    protected _popoverList?: HTMLElement;\n    protected _shouldLoadDays: boolean;\n    private _tempDay;\n    private _tempWeek;\n    private _tempEvent;\n    private _calCellWidth;\n    private _areaTop;\n    private _areaLeft;\n    private _areaBottom;\n    private _areaRight;\n    private _onCalendar;\n    private _triggerCreated;\n    private _triggerUpdated;\n    private _triggerDeleted;\n    private _defaultDate;\n    private _events;\n    private _hoverTimer;\n    private _isHover;\n    private _isEventClick;\n    private _isListScrolling;\n    private _isPageChange;\n    private _moreLabelClicked;\n    private _refresh;\n    private _shouldAnimateScroll;\n    private _shouldScroll;\n    private _shouldSkipScroll;\n    private _skipScheduleScroll;\n    private _unsubscribe;\n    private _viewChanged;\n    private _remote;\n    /**\n     * Sets the events for the calendar.\n     * @param events Array containing the events.\n     */\n    addEvent(events: MbscCalendarEvent | MbscCalendarEvent[]): string[];\n    /**\n     * Returns the events between start/end.\n     */\n    getEvents(start?: DateType, end?: DateType): MbscCalendarEvent[];\n    /**\n     * Returns the invalids between start/end.\n     */\n    getInvalids(start?: DateType, end?: DateType): MbscCalendarEvent[];\n    /**\n     * Returns the selected events.\n     */\n    getSelectedEvents(): MbscCalendarEvent[];\n    /**\n     * Sets the events for the calendar.\n     * @param events Array containing the events.\n     */\n    setEvents(events: MbscCalendarEvent[]): string[];\n    /**\n     * Set the selected events.\n     */\n    setSelectedEvents(selectedEvents: MbscCalendarEvent[]): void;\n    /**\n     * Removes one or more events from the calendar.\n     * @param events\n     */\n    removeEvent(events: string | number | MbscCalendarEvent | string[] | number[] | MbscCalendarEvent[]): void;\n    /**\n     * Navigates the calendar to the specified date.\n     * @param date\n     */\n    navigate(date: DateType, animate?: boolean): void;\n    /**\n     * Updates one or more events in the calendar.\n     * @param events\n     */\n    updateEvent(events: MbscCalendarEvent | MbscCalendarEvent[]): void;\n    /**\n     * Refreshes the view.\n     */\n    refresh(): void;\n    /** @hidden */\n    _onWeekDayClick: (d: number) => void;\n    /** @hidden */\n    _onDayClick: (args: any) => void;\n    /** @hidden */\n    _onActiveChange: (args: any) => void;\n    /** @hidden */\n    _onGestureStart: (args: any) => void;\n    /** @hidden */\n    _onDayDoubleClick: (args: any) => void;\n    /** @hidden */\n    _onDayRightClick: (args: any) => void;\n    /** @hidden */\n    _onCellHoverIn: (args: any) => void;\n    /** @hidden */\n    _onCellHoverOut: (args: any) => void;\n    /** @hidden */\n    _onEventHoverIn: (args: any) => void;\n    /** @hidden */\n    _onEventHoverOut: (args: any) => void;\n    /** @hidden */\n    _onEventClick: (args: any) => void;\n    /** @hidden */\n    _onEventDoubleClick: (args: any) => void;\n    /** @hidden */\n    _onEventRightClick: (args: any) => void;\n    /** @hidden */\n    _onEventDragEnd: (args: any) => void;\n    /** @hidden */\n    _onEventDragStart: (args: any) => void;\n    /** @hidden */\n    _onLabelHoverIn: (args: any) => void;\n    /** @hidden */\n    _onLabelHoverOut: (args: any) => void;\n    /** @hidden */\n    _onLabelClick: (args: any) => void;\n    /** @hidden */\n    _onLabelDoubleClick: (args: any) => void;\n    /** @hidden */\n    _onLabelRightClick: (args: any) => void;\n    /** @hidden */\n    _onCellClick: (args: any) => void;\n    /** @hidden */\n    _onCellDoubleClick: (args: any) => void;\n    /** @hidden */\n    _onCellRightClick: (args: any) => void;\n    /** @hidden */\n    _onPageChange: (args: IPageChangeEvent) => void;\n    /** @hidden */\n    _onPageLoading: (args: IPageLoadingEvent) => void;\n    /** @hidden */\n    _onPageLoaded: (args: IPageLoadedEvent) => void;\n    /** @hidden */\n    _onPopoverClose: () => void;\n    /** @hidden */\n    _onResize: (ev: any) => void;\n    /** @hidden */\n    _onSelectedEventsChange: (events: any) => void;\n    /** @hidden */\n    _getDragDates: (start: Date, end: Date, event: MbscCalendarEventData) => {\n        [key: number]: ILabelDragDataSet;\n    };\n    _onLabelUpdateModeOn: (args: any) => void;\n    _onLabelUpdateModeOff: (args: any) => void;\n    _onLabelUpdateStart: (args: any) => void;\n    _onLabelUpdateMove: (args: any) => void;\n    _onLabelUpdateEnd: (args: any) => void;\n    _onEventDragStop: (args: any) => boolean;\n    _onExternalDrag: (args: any) => void;\n    /** @hidden */\n    _onEventDelete: (args: any) => void;\n    protected _render(s: MbscEventcalendarOptions, state: MbscEventcalendarState): void;\n    protected _mounted(): void;\n    protected _updated(): void;\n    protected _destroy(): void;\n    private _onKeyDown;\n    private _resetSelection;\n    private _getAgendaEvents;\n    private _getEventData;\n    /**\n     * Returns the timestamp of the closest day which falls between the specified start and end weekdays.\n     * @param timestamp The timestamp of the date to validate.\n     * @param dir Navigation direction. If not specified, it will return the next valid day, otherwise the next or prev, based on direction.\n     */\n    private _getValidDay;\n    private _setEventList;\n    private _hidePopover;\n    private _scrollToDay;\n    private _selectedChange;\n    private _cellClick;\n    private _dayClick;\n    private _labelClick;\n    private _eventClick;\n    /**\n     * Handles multiple event selection on label/event click.\n     */\n    private _handleMultipleSelect;\n}\n"]}