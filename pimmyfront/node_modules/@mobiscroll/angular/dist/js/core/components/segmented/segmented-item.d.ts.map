{"version":3,"file":"segmented-item.d.ts","sources":["segmented-item.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BaseComponent } from '../../base';\nimport { MbscButtonOptions } from '../button/button';\nimport { MbscSegmentedGroupOptions } from './segmented-group';\nexport interface MbscSegmentedOptions extends MbscButtonOptions {\n    checked?: boolean;\n    defaultChecked?: boolean;\n    inputClass?: string;\n    name?: string;\n    select?: 'single' | 'multiple';\n    value?: string;\n    onChange?: any;\n    rtl?: boolean;\n}\n/** @hidden */\nexport interface MbscSegmentedState {\n    disabled?: boolean;\n    selected?: boolean;\n    hasFocus?: boolean;\n}\n/** @hidden */\nexport declare class SegmentedBase extends BaseComponent<MbscSegmentedOptions, MbscSegmentedState> {\n    static defaults: MbscSegmentedOptions;\n    protected static _name: string;\n    _box: HTMLElement | null;\n    _checked: boolean;\n    _color?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light';\n    _cssClass?: string;\n    _disabled: boolean;\n    _id: string;\n    _isMultiple: boolean;\n    _index: number;\n    _name: string;\n    _selectedIndex: number | undefined;\n    _value: any;\n    _animate: boolean;\n    _onGroupChange: (ev: any, value: any) => void;\n    private _unsubscribe;\n    private _unlisten;\n    _onChange: (ev: any) => void;\n    _onValueChange: (value: any) => void;\n    protected _change(checked: boolean): void;\n    protected _toggle(checked: boolean): void;\n    protected _groupOptions({ color, disabled, name, onChange, select, value }: MbscSegmentedGroupOptions): void;\n    protected _mounted(): void;\n    protected _updated(): void;\n    protected _destroy(): void;\n}\n"]}