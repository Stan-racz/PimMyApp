{"version":3,"file":"datetime.d.ts","sources":["datetime.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BaseComponent } from '../../base';\nimport { DateType, IDatetimeProps } from '../../util/datetime';\nimport { IScrollerProps, MbscScrollerWheel, ScrollerBase } from '../scroller/scroller';\nexport interface MbscDatetimeOptions extends IDatetimeProps, IScrollerProps {\n    dateDisplay?: string;\n    dateWheelFormat?: string;\n    dateWheels?: string;\n    defaultValue?: DateType;\n    mode?: 'date' | 'datetime' | 'time';\n    stepHour?: number;\n    stepMinute?: number;\n    stepSecond?: number;\n    timeWheels?: string;\n    nowText?: string;\n}\n/** @hidden */\nexport interface MbscDatetimeState {\n    value?: DateType;\n}\n/**\n * @hidden\n */\nexport declare class DatetimeBase extends BaseComponent<MbscDatetimeOptions, MbscDatetimeState> {\n    /** @hidden */\n    static defaults: MbscDatetimeOptions;\n    protected static _name: string;\n    /** @hidden */\n    _wheels: MbscScrollerWheel[][];\n    /** @hidden */\n    _minWheelWidth: number | number[];\n    /** @hidden */\n    _value: DateType;\n    protected _preset: string;\n    protected _scroller: ScrollerBase;\n    private _dateDisplay;\n    private _dateTemplate;\n    private _dateWheels;\n    private _format;\n    private _getDatePart;\n    private _hasAmPm;\n    private _hasDay;\n    private _max;\n    private _min;\n    private _innerValues;\n    private _invalids;\n    private _timeDisplay;\n    private _timeStep;\n    private _timeWheels;\n    private _valids;\n    private _wheelOrder;\n    getVal(): DateType;\n    setVal(value: DateType): void;\n    position(): void;\n    isVisible(): boolean;\n    _onChange: (args: any) => void;\n    _parseDate: (value: string) => any[];\n    _formatDate: (values: any[]) => string;\n    _getDate: (values: any[]) => Date;\n    _validate: ({ direction, index, values, wheels }: any) => {\n        disabled: Map<any, boolean>[];\n        init: boolean;\n        valid: number[];\n    };\n    _shouldValidate: (s: any, prevS: any) => boolean;\n    _valueEquals(v1: any, v2: any): boolean;\n    protected _render(s: MbscDatetimeOptions, state: MbscDatetimeState): void;\n    protected _getYearValue: (i: number) => any;\n    protected _getYearIndex: (i: any) => any;\n    protected _getDateIndex: (i: any) => any;\n    protected _getDateItem: (i: number) => {\n        disabled: any;\n        display: string;\n        value: string;\n    };\n    private _getWheels;\n    private _getDateWheel;\n    private _getTimeWheel;\n    private _getArray;\n    private _getArrayPart;\n    private _getHours;\n    private _getMinutes;\n    private _getSeconds;\n    private _getFullTime;\n}\n"]}