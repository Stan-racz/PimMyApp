{"version":3,"file":"calendar-label.d.ts","sources":["calendar-label.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BaseComponent, IBaseProps } from '../../base';\nimport { ITimezonePlugin } from '../../util/datetime';\nimport { MbscCalendarEventData, MbscCalendarLabel, MbscResource } from './calendar-view.types';\n/** @hidden */\nexport interface ICalendarLabelProps extends IBaseProps {\n    amText?: string;\n    count?: string;\n    date?: number;\n    dataTimezone?: string;\n    displayTimezone?: string;\n    drag?: boolean;\n    event?: MbscCalendarLabel;\n    exclusiveEndDates?: boolean;\n    firstDay?: number;\n    hidden?: boolean;\n    id?: any;\n    inactive?: boolean;\n    isActiveMonth?: boolean;\n    isPicker?: boolean;\n    isUpdate?: boolean;\n    label?: string;\n    lastDay?: Date;\n    more?: string;\n    pmText?: string;\n    resourcesMap?: {\n        [key: number]: MbscResource;\n    };\n    rtl?: boolean;\n    selected?: boolean;\n    showEventTooltip?: boolean;\n    showText?: boolean;\n    theme?: string;\n    timeFormat?: string;\n    timezonePlugin?: ITimezonePlugin;\n    contentTemplate?: any;\n    template?: any;\n    resize?: boolean;\n    width?: number;\n    renderContent?(event: MbscCalendarEventData): any;\n    render?(event: MbscCalendarEventData): any;\n    onClick?(args: any): void;\n    onDoubleClick?(args: any): void;\n    onRightClick?(args: any): void;\n    onHoverIn?(args: any): void;\n    onHoverOut?(args: any): void;\n    onDelete?(args: any, inst: any): void;\n    onDragStart?(args: any): void;\n    onDragMove?(args: any): void;\n    onDragEnd?(args: any): void;\n    onDragModeOn?(args: any): void;\n    onDragModeOff?(args: any): void;\n}\n/** @hidden */\nexport interface ICalendarLabelState {\n    hasFocus?: boolean;\n    hasHover?: boolean;\n}\n/** @hidden */\nexport declare class CalendarLabelBase extends BaseComponent<ICalendarLabelProps, {}> {\n    _color: string | undefined;\n    _content: any;\n    _cssClass: string;\n    _data: any;\n    _hasResizeStart: boolean | undefined;\n    _hasResizeEnd: boolean | undefined;\n    _html: any;\n    _textColor: string | undefined;\n    _title: string | undefined;\n    _tabIndex: number | undefined;\n    private _doc;\n    private _isDrag;\n    private _text;\n    private _touchTimer;\n    private _unlisten;\n    private _unsubscribe;\n    _onClick: (ev: any) => void;\n    _onRightClick: (ev: any) => void;\n    protected _onDocTouch: (ev: any) => void;\n    protected _mounted(): void;\n    protected _destroy(): void;\n    protected _render(s: ICalendarLabelProps, state: ICalendarLabelState): void;\n    private _updateState;\n    private _triggerEvent;\n}\n"]}