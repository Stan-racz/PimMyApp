{"version":3,"file":"calendar-view.d.ts","sources":["calendar-view.d.ts"],"names":[],"mappingssourcesContent":["import { BaseComponent } from '../../base';\nimport { ICalendarViewProps, ICalendarViewState, ViewType } from './calendar-view.types';\n/** @hidden */\nexport declare class CalendarViewBase extends BaseComponent<ICalendarViewProps, ICalendarViewState> {\n    state: ICalendarViewState;\n    _marksMap?: {};\n    _labelsMap?: {};\n    _active: number;\n    _activeMonth: number;\n    _axis: 'X' | 'Y';\n    _body: HTMLElement;\n    _cssClass: string;\n    _colors: {} | undefined;\n    _dayNames: string[];\n    _dim: any;\n    _firstDay: Date;\n    _firstPage: HTMLElement;\n    _firstPageDay: Date;\n    _hasPicker: boolean;\n    _isGrid: boolean;\n    _isVertical: boolean;\n    _invalid: {} | undefined;\n    _pageIndex: number;\n    _prevIcon: string;\n    _labels: {} | undefined;\n    _labelsLayout: {} | undefined;\n    _lastDay: Date;\n    _lastPageDay: Date;\n    _marked: {} | undefined;\n    _maxDate: Date | number;\n    _maxIndex: number;\n    _maxYear: Date | number;\n    _maxYearIndex: number;\n    _maxYears: number;\n    _maxYearsIndex: number;\n    _minDate: Date | number;\n    _minIndex: number;\n    _minYear: Date | number;\n    _minYearIndex: number;\n    _minYears: number;\n    _minYearsIndex: number;\n    _months: any[];\n    _monthsMulti: number[][];\n    _mousewheel: boolean;\n    _nextIcon: string;\n    _pageNr: number;\n    _pickerBtn: HTMLElement;\n    _pickerCont: HTMLElement;\n    _prevAnim: boolean;\n    _rtlNr: number;\n    _showOuter: boolean;\n    _title: any[];\n    _valid: {} | undefined;\n    _viewTitle: string;\n    _weeks: number;\n    _variableRow: number;\n    _view: ViewType;\n    _yearFirst: boolean;\n    _yearIndex: number;\n    _yearOffset: number;\n    _yearsIndex: number;\n    _yearsOffset: number;\n    MONTH_VIEW: ViewType;\n    YEAR_VIEW: ViewType;\n    MULTI_YEAR_VIEW: ViewType;\n    private _doc;\n    private _hoverTimer;\n    private _isHover;\n    private _isIndexChange;\n    private _isLabelClick;\n    private _isSwipeChange;\n    private _maxLabels;\n    private _observer;\n    private _offset;\n    private _pageChange;\n    private _prevClick;\n    private _prevPageChange;\n    private _viewEnd;\n    private _viewStart;\n    private _shouldCheckSize;\n    private _shouldFocus;\n    private _shouldPageLoad;\n    private _disableHover;\n    /**\n     * Navigates to next page\n     */\n    nextPage: () => void;\n    /**\n     * Navigates to previous page\n     */\n    prevPage: () => void;\n    _changeView: (newView?: ViewType) => void;\n    _getPageDay(pageIndex: number): number;\n    _getPageStyle(index: number, offset: number, pageNr?: number): {};\n    _getPageYear(pageIndex: number): number;\n    _getPageYears(pageIndex: number): number;\n    _getPickerClass(view: ViewType): string;\n    _isNextDisabled(isModalPicker?: boolean): boolean;\n    _isPrevDisabled(isModalPicker?: boolean): boolean;\n    _onDayHoverIn: (ev: any) => void;\n    _onDayHoverOut: (ev: any) => void;\n    _onLabelClick: (args: any) => void;\n    _onDayClick: (args: any) => void;\n    _onTodayClick: (args: any) => void;\n    _onMonthClick: (args: any) => void;\n    _onYearClick: (args: any) => void;\n    _onPageChange: (args: any) => void;\n    _onYearPageChange: (args: any) => void;\n    _onYearsPageChange: (args: any) => void;\n    _onAnimationEnd: (args: any) => void;\n    _onStart: () => void;\n    _onGestureStart: (args: any) => void;\n    _onGestureEnd: (args: any) => void;\n    _onPickerClose: () => void;\n    _onPickerOpen: () => void;\n    _onPickerBtnClick: (ev: any) => void;\n    _onDocClick: (ev: any) => void;\n    _onViewAnimationEnd: () => void;\n    _onResize: () => void;\n    _onKeyDown: (ev: any) => void;\n    protected _render(s: ICalendarViewProps, state: ICalendarViewState): void;\n    protected _mounted(): void;\n    protected _updated(): void;\n    protected _destroy(): void;\n    private _getActiveCell;\n    private _focusActive;\n    private _pageLoaded;\n    private _activeChange;\n    private _activeYearsChange;\n    private _activeYearChange;\n    private _prevDocClick;\n}\n"]}